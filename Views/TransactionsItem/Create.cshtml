@using Library_System.ViewModels
@model TransactionViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>حركة بيع جديدة</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
             <div class="form-group">
                <label asp-for="transaction.TransactionId" class="control-label"></label>
                <input asp-for="transaction.TransactionId" class="form-control" />
                <span asp-validation-for="transaction.TransactionId" class="text-danger"></span>
            </div>
            @*  <div class="form-group">
                <label asp-for="transaction.TransactionTypeId" class="control-label"></label>
                <input asp-for="transaction.TransactionTypeId" class="form-control" />
                <span asp-validation-for="transaction.TransactionTypeId" class="text-danger"></span>
            </div>
           
            <div class="form-group">
                <label asp-for="transaction.TransactionDate" class="control-label"></label>
                <input type="datetime" asp-for="TransactionDate" class="form-control" />
                <span asp-validation-for="TransactionDate" class="text-danger"></span>
            </div>   *@
             <div class="form-group">
                <label asp-for="transaction.CustomerId" class="control-label"></label>
                <input asp-for="transaction.CustomerId" class="form-control" />
                <span asp-validation-for="transaction.CustomerId" class="text-danger"></span>
            </div>


            <table class="table table-striped table-bordered bulk_action" id="orderItemsTable">
                <thead>
                <th>Item</th>
                <th> price</th>
                <th>Qty</th>
                <th></th>
                </thead>

              @*   @for (int i = 0; i < Model.transactionsItem.Count; i++)
                { *@
                    <tbody>
                    <tr>                     
                        <td><input name="transactionsItem[0].ItemId" /> </td>
                        <td><input name="transactionsItem[0].ItemPrice" type="number" /> </td>
                        <td><input name="transactionsItem[0].ItemQuantity" type="number" /> </td>
                        <td><button type="button" onclick="removeRow(this)">Remove</button></td>
                       @*  <td>
                            <input asp-for="transactionsItem[0].ItemId" class="form-control" />

                        </td>
                        <td>

                            <input asp-for="transactionsItem[0].ItemPrice" class="form-control" />
                        </td>
                        <td>

                            <input asp-for="transactionsItem[0].ItemQuantity" class="form-control" />
                        </td> *@
                       
                    </tr>
                </tbody>
                @* } *@
            </table>
            <button type="button" onclick="addRow()">Add Item</button>
            
 <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



@section Scripts {
    <script>
        function addRow() {
            const table = document.getElementById("orderItemsTable").getElementsByTagName("tbody")[0];
            let itemIndex = table.rows.length;
            const newRow = table.insertRow();

            newRow.innerHTML = `
                                <td><input name="transactionsItem[${itemIndex}].ItemId" /> </td>
                                <td><input name="transactionsItem[${itemIndex}].ItemPrice" type="number" /> </td>
                                <td><input name="transactionsItem[${itemIndex}].ItemQuantity" type="number" /> </td>
                                <td><button type="button" onclick="removeRow(this)">Remove</button></td>
                        `;
            table.appendChild(newItem);
            //itemIndex++;
        }

        function removeRow(button) {
            const row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
